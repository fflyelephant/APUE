5.2 fgets直到读到换行符或者缓冲区满才结束，程序仍然可以正常执行，因为fgets的最终还是要调用read系统调用，MAXLINE很小只会让调用系统调用read的
	次数增加而已。

5.3 printf("") 返回0

5.4 getc和getchar都是返回的int类型，代码却定义的char类型，由于在平台上EOF就是定义的-1，如果系统使用的是有符号值，则结束标志-1可以被识别出来，
	如果系统使用的是无符号数，返回的-1将被强制转换(unsigned char)-1，则匹配不到EOF(-1)，程序进入死循环中。

5.5 先调用fflush将缓冲区数据输出，将FILE* fp用fd = fileno(fp)，获得fsync的参数调用。不用fflush在缓冲区中的数据仍旧在缓冲区中

5.6 当向终端读写是，默认是属于行缓冲的，使用fgets函数时会先刷洗stdout里的缓冲数据。

5.7 