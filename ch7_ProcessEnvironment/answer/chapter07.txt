7.1 因为没有return或者exit等显示的终结，main函数的返回值就是函数最后一条语句printf的返回值，就是字符串"hello, world"的长度13.

7.2 当在交互模式的时候是行缓冲，遇见换行符才是真正的输出，当重定向到一个文件的时候属于全缓冲，除非显示的调用fflush，否则只有缓冲区满或者
	程序终止的时候才会真正的输出.

7.3 没有办法，agrc和argv是属于局部变量，除了自己本身没有办法通过其他办法引用它们，而environ是全局变量，可通过extern char **environ来引用.

7.4 当程序解引用空指针出错时，执行该程序的进程终止。利用这种方法终止进程.

7.5 
	typedef void Exitfunc(void);
	int atexit(Exitfunc *func);

7.6 calloc将分配的空间初始化为数字0，但是数字0在一些系统中和浮点数的0和空指针并不一定是相等的.

7.7 只有通过exec函数执行一个程序是才会分配堆和栈.

7.8 因为a.out文件中还包含了用于条数core文件的符号表信息.

7.9 没有使用贡献库时，a.out中含有大量的标准IO库的内容，所以显得非常大.

7.10 
	int f1(int val)
	{
		int num = 0;
		int *ptr = &num;
		if (val == 0) {
			int val;
			val = 5;
			ptr = &val;
		}
		return(*ptr + 1);
	}
	*: 当val不等于0时，正确返回1
	*: 当val等于0时，因为if语句中的{}里面属于一个内部作用域，所以，在}之后，里面的数据将被释放，内存被回收，此时再解引用ptr将出错.